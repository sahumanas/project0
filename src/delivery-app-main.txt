import React, { useState, useEffect } from 'react';
import { StatusBar } from 'react-native';
import AppNavigator from './src/delivery-app/navigation/AppNavigator';
import { Provider as ReduxProvider } from 'react-redux';
import store from './src/store';
import * as Font from 'expo-font';
import { Asset } from 'expo-asset';
import * as SplashScreen from 'expo-splash-screen';
import LoadingScreen from './src/shared/components/LoadingScreen';

// Keep the splash screen visible while we fetch resources
SplashScreen.preventAutoHideAsync();

const App = () => {
  const [appIsReady, setAppIsReady] = useState(false);

  useEffect(() => {
    async function prepare() {
      try {
        // Pre-load fonts, make any API calls you need to do here
        await Font.loadAsync({
          // Custom fonts can be loaded here
          'roboto-regular': require('./assets/fonts/Roboto-Regular.ttf'),
          'roboto-medium': require('./assets/fonts/Roboto-Medium.ttf'),
          'roboto-bold': require('./assets/fonts/Roboto-Bold.ttf'),
        });

        // Pre-load images
        await Asset.loadAsync([
          require('./assets/logo.png'),
          require('./assets/splash.png'),
          require('./assets/icon.png'),
        ]);

        // Artificially delay for 2 seconds to simulate a slow loading
        // experience. In a real app, remove this and only set isReady
        // when the resources are loaded
        await new Promise(resolve => setTimeout(resolve, 2000));
      } catch (e) {
        console.warn(e);
      } finally {
        // Tell the application to render
        setAppIsReady(true);
      }
    }

    prepare();
  }, []);

  useEffect(() => {
    async function hideSplash() {
      if (appIsReady) {
        // This tells the splash screen to hide immediately
        await SplashScreen.hideAsync();
      }
    }

    hideSplash();
  }, [appIsReady]);

  if (!appIsReady) {
    return <LoadingScreen />;
  }

  return (
    <ReduxProvider store={store}>
      <StatusBar barStyle="dark-content" backgroundColor="#f5f5f5" />
      <AppNavigator />
    </ReduxProvider>
  );
};

export default App;
